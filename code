function customOnEdit(e) {
  var sheet = e.source.getActiveSheet();
  var range = e.range;

  // Check if the edit occurred in Column AD (the checkbox) and if it was checked
  if (sheet.getName() === 'Form Responses 1' && range.getColumn() == 30 && range.getRow() > 1) { // AD is the 30th column
    var row = range.getRow(); // Identify the row of concern
    var isChecked = sheet.getRange(row, 30).getValue(); // Get the value of the checkbox (TRUE if checked)
    
    if (isChecked) {
      var email = sheet.getRange(row, 2).getValue(); // Email Address (Column B)
      var requestId = sheet.getRange(row, 23).getValue(); // Request ID (Column W)
      var requestType = sheet.getRange(row, 7).getValue(); // Request Type (Column G)
      var requestTitle = sheet.getRange(row, 40).getValue(); // Request title. (Column AN)
      var completeName = sheet.getRange(row, 3).getValue(); // Complete Name (Column C)
      var assignedTo = sheet.getRange(row, 21).getValue(); // Assigned To (Column U)
      var complexity = sheet.getRange(row, 24).getValue(); // Complexity (Column X)
      var sla = sheet.getRange(row, 25).getValue(); // SLA (computed) (Column Y)
      var plannedStartDate = sheet.getRange(row, 26).getValue(); // Planned Start Date (Column Z)
      var endDate = sheet.getRange(row, 27).getValue(); // Communicated End Date (computed) (Column AA)
      var remarks = sheet.getRange(row, 20).getValue(); // Remarks on Decision (Column T)
      
      if (email) {
        var subject = "[" + requestId + "] Request for " + requestType + " - " + requestTitle;
        var body = generatePlainTextBody(completeName, assignedTo, complexity, sla, plannedStartDate, endDate, remarks);
        
        // Send the email with plain text content
        MailApp.sendEmail({
          to: email,
          subject: subject,
          body: body // Using "body" instead of "htmlBody" for plain text emails
        });
      }
    }
  }
}

// Helper function to generate the plain text email body
function generatePlainTextBody(completeName, assignedTo, complexity, sla, plannedStartDate, endDate, remarks) {
  var formattedPlannedStartDate = Utilities.formatDate(new Date(plannedStartDate), Session.getScriptTimeZone(), "EEE MMM dd yyyy");
  var formattedEndDate = Utilities.formatDate(new Date(endDate), Session.getScriptTimeZone(), "EEE MMM dd yyyy");

  var body = "Hi " + completeName + ",\n\n";
  body += "We are now processing your request for data analysis. The assignee will communicate with you for additional details on your request.\n\n";
  body += "Assignee: " + assignedTo + "\n";
  body += "Complexity: " + complexity + "\n";
  body += "SLA: " + sla + " working days\n";
  body += "Planned start date: " + formattedPlannedStartDate + "\n";
  body += "Expected completion date: " + formattedEndDate + "\n";
  body += "Remarks: " + remarks + "\n\n";
  body += "Best regards,\nData and Insights Team\n";

  return body;
}
